#这个yaml放置的配置，不会因开发、测试、生产环境而改变。
server:
  port: 9999
  
spring: 
  application:
    name: service-gateway      # 应用名称

#--------配置环境 --------   
  profiles:
    active: dev    

  cloud:
    gateway:
      globalcors:                       #官方最新配置，解决跨域
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods: "*"
            allowedHeaders: "*"
      discovery:
        locator:
          enabled: true                 #开启从注册中心动态创建路由的功能，利用微服务名进行路由
      routes:
        - id: service-sys               #路由的ID，没有固定规则但要求唯一，建议配合服务名
          uri: lb://service-sys         #匹配后提供服务的路由地址
          predicates:
            - Path=/sys/**              #断言，路径相匹配的进行路由,多个用逗号分隔
        
        - id: service-demo              #路由的ID，没有固定规则但要求唯一，建议配合服务名
          uri: lb://service-demo        #匹配后提供服务的路由地址
          predicates:
            - Path=/demo/**             #断言，路径相匹配的进行路由,多个用逗号分隔

        - id: service-pcm               #路由的ID，没有固定规则但要求唯一，建议配合服务名
          uri: lb://service-pcm         #匹配后提供服务的路由地址
          predicates:
            - Path=/pcm/**              #断言，路径相匹配的进行路由,多个用逗号分隔

        - id: service-ppm               #路由的ID，没有固定规则但要求唯一，建议配合服务名
          uri: lb://service-ppm         #匹配后提供服务的路由地址
          predicates:
            - Path=/ppm/**              #断言，路径相匹配的进行路由,多个用逗号分隔

        - id: service-pmm               #路由的ID，没有固定规则但要求唯一，建议配合服务名
          uri: lb://service-pmm         #匹配后提供服务的路由地址
          predicates:
            - Path=/pmm/**              #断言，路径相匹配的进行路由,多个用逗号分隔

#--------暴露监控端点--------          
management:
  endpoints:
    web:
      exposure:
        include: '*'
        